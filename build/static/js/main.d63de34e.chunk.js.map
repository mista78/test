{"version":3,"sources":["api.js","components/Games.js","components/Home.js","components/Header.js","components/Streams.js","components/GameStreams.js","index.js"],"names":["api","axios","create","headers","Client-ID","Games","_useState","useState","_useState2","Object","slicedToArray","games","setGames","useEffect","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","result","dataArray","finalArray","wrap","_context","prev","next","get","sent","data","map","game","newURL","box_art_url","replace","stop","apply","this","arguments","fetchData","react_default","createElement","className","react_router_dom","to","pathname","name","state","gameID","id","alt","src","Home","match","channels","setChannels","_useState3","params","_useState4","views","setViews","_ref2","gameIDs","queryParams","finalURL","gameNames","gameNameArray","uViews","stream","game_id","concat","gameName","thumbnail_url","undefined","_objectSpread","user_name","handelClick","event","updateViews","target","getAttribute","url","toLowerCase","ReactPlayer_default","width","playing","channel","data-count","onClick","value","Header","Stream","GameStreams","location","streamData","setStreamData","setViewers","totalViewers","reduce","acc","val","viewer_count","rootElement","document","getElementById","ReactDOM","render","components_Header","react_router","exact","path","component"],"mappings":"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","file":"static/js/main.d63de34e.chunk.js","sourcesContent":["import axios from \"axios\";\n\nlet API_KEY = \"konp54pwem1n35thhka2nrn620q6xdu\";\nlet api = axios.create({\n  headers: {\n    \"Client-ID\": API_KEY\n  }\n});\n\nexport default api;","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../api\";\nfunction Games() {\n  const [games, setGames] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(\"https://api.twitch.tv/helix/games/top?first=25\");\n      let dataArray = result.data.data;\n      let finalArray = dataArray.map(game => {\n        let newURL = game.box_art_url\n          .replace(\"{width}\", \"285\")\n          .replace(\"{height}\", \"380\");\n        game.box_art_url = newURL;\n        return game;\n      });\n      // console.log(finalArray);\n      setGames(finalArray);\n    };\n    fetchData();\n  }, []);\n  return (\n    <div>\n      <div className=\"row\">\n        {games.map(game => (\n          <div className=\"col-lg-2 col-md-3 col-sm-4 col-6 mt-5\">\n            <div className=\"card\">\n              <Link\n                className=\"link\"\n                to={{\n                  pathname: \"/game/\" + game.name,\n                  state: {\n                    gameID: game.id\n                  }\n                }}\n              >\n                <img className=\"card-img-top\" alt=\"\" src={game.box_art_url} />\n              </Link>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Games;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ReactPlayer from \"react-player\";\nimport api from \"../api\";\nfunction Home({ match }) {\n  const [channels, setChannels] = useState([]);\n  const [views, setViews] = useState({\n    \"name\" : (match.params.id) ? match.params.id : \"sardoche\"\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(\"https://api.twitch.tv/helix/streams?first=10&language=fr\");\n      let dataArray = result.data.data;\n      let gameIDs = dataArray.map(stream => {\n        return stream.game_id;\n      });\n\n      let baseURL = \"https://api.twitch.tv/helix/games?\";\n      let queryParams = \"\";\n      gameIDs.map(id => {\n        return (queryParams = queryParams + `id=${id}&`);\n      });\n\n      let finalURL = baseURL + queryParams;\n      let gameNames = await api.get(finalURL);\n      let gameNameArray = gameNames.data.data;\n\n      let finalArray = dataArray.map(stream => {\n        stream.gameName = \"\";\n        gameNameArray.map(name => {\n          if (stream.game_id === name.id) {\n            return (stream.gameName = name.name);\n          }\n        });\n\n        let newURL = stream.thumbnail_url\n          .replace(\"{width}\", \"320\")\n          .replace(\"{height}\", \"180\");\n        stream.thumbnail_url = newURL;\n        return stream;\n      });\n      setChannels(finalArray);\n      if (match.params.id === undefined) {\n        const uViews = {...views}\n        uViews.name = finalArray[0].user_name\n        setViews(uViews)\n      }\n    };\n    fetchData();\n  }, []);\n  const handelClick = (event) => {\n    const updateViews = {...views}\n    updateViews.name = event.target.getAttribute('value')\n    setViews(updateViews)\n  }\n  \n  const url = \"https://www.twitch.tv/\" + views.name.toLowerCase();\n  return (\n    <div>\n        <div className=\"left\">\n          <ReactPlayer width=\"100%\" url={url} playing />\n        </div>\n        <div className=\"right\">\n          <div className=\"row\">\n            {channels.map(channel => (\n              <div className=\"col-lg-12 col-md-12 col-sm-12 mt-5\">\n                <div className=\"card\">\n                  <span className=\"spanF\" data-count={channel.user_name}  onClick={handelClick}>\n                    <img\n                      value={channel.user_name}\n                      className=\"card-img-top\"\n                      alt=\"\"\n                      src={channel.thumbnail_url}\n                    />\n                  </span>\n                </div>\n              </div>\n            ))}\n          </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Header() {\n  return (\n    <nav className=\"navbar fixed-top\">\n      <ul>\n        <li className=\"nav-item nav-link\">\n          <Link to=\"/\">Home</Link>\n        </li>\n         <li className=\"nav-item nav-link\">\n          <Link to=\"/game\">Top Games</Link>\n        </li>\n        <li className=\"nav-item nav-link\">\n          <Link to=\"/top-streams\">Top Live Streams</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Header;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../api\";\nfunction Stream() {\n  const [channels, setChannels] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(\"https://api.twitch.tv/helix/streams?first=60&language=fr\");\n      let dataArray = result.data.data;\n      let gameIDs = dataArray.map(stream => {\n        return stream.game_id;\n      });\n\n      let baseURL = \"https://api.twitch.tv/helix/games?\";\n      let queryParams = \"\";\n      gameIDs.map(id => {\n        return (queryParams = queryParams + `id=${id}&`);\n      });\n\n      let finalURL = baseURL + queryParams;\n      let gameNames = await api.get(finalURL);\n      let gameNameArray = gameNames.data.data;\n\n      let finalArray = dataArray.map(stream => {\n        stream.gameName = \"\";\n        gameNameArray.map(name => {\n          if (stream.game_id === name.id) {\n            return (stream.gameName = name.name);\n          }\n        });\n\n        let newURL = stream.thumbnail_url\n          .replace(\"{width}\", \"320\")\n          .replace(\"{height}\", \"180\");\n        stream.thumbnail_url = newURL;\n        return stream;\n      });\n      setChannels(finalArray);\n    };\n    fetchData();\n  }, []);\n  return (\n    <div>\n      <div className=\"row\">\n        {channels.map(channel => (\n          <div className=\"col-lg-3 col-md-4 col-sm-12 mt-5\">\n            <div className=\"card\">\n              <Link\n                className=\"link views\"\n                data-count={channel.user_name}\n                to={{\n                  pathname: \"/views/\" + channel.user_name\n                }}\n              >\n                <img\n                  className=\"card-img-top\"\n                  alt=\"\"\n                  src={channel.thumbnail_url}\n                />\n              </Link>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Stream;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../api\";\nfunction GameStreams({ match, location }) {\n  const [streamData, setStreamData] = useState([]);\n  const [viewers, setViewers] = useState(0);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(\n        `https://api.twitch.tv/helix/streams?game_id=${location.state.gameID}&first=24&language=fr`\n      );\n      let dataArray = result.data.data;\n      let finalArray = dataArray.map(stream => {\n        let newURL = stream.thumbnail_url\n          .replace(\"{width}\", \"320\")\n          .replace(\"{height}\", \"180\");\n        stream.thumbnail_url = newURL;\n        return stream;\n      });\n\n      let totalViewers = finalArray.reduce((acc, val) => {\n        return acc + val.viewer_count;\n      }, 0);\n      setViewers(totalViewers);\n      setStreamData(finalArray);\n    };\n    fetchData();\n  }, []);\n  return (\n    <div>\n      <div className=\"row\">\n        {streamData.map(stream => (\n          <div className=\"col-lg-3 col-md-4 col-sm-12 mt-5\">\n            <div className=\"card\">\n              <Link\n                className=\"link views\"\n                data-count={stream.user_name}\n                to={{\n                  pathname: \"/views/\" + stream.user_name\n                }}\n              >\n                <img\n                  className=\"card-img-top\"\n                  alt=\"\"\n                  src={stream.thumbnail_url}\n                />\n              </Link>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default GameStreams;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Games from \"./components/Games\";\nimport Home from \"./components/Home\";\nimport Header from \"./components/Header\";\nimport Stream from \"./components/Streams\";\nimport GameStreams from \"./components/GameStreams\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <div className=\"App container-fluid\">\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/game\" component={Games} />\n        <Route exact path=\"/top-streams\" component={Stream} />\n        <Route path=\"/game/:id\" component={GameStreams} />\n      </div>\n      <Route path=\"/views/:id\" component={Home} />\n    </Router>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}