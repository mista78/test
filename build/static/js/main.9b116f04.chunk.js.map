{"version":3,"sources":["api.js","components/Games.js","components/Player.js","components/Views.js","components/Header.js","components/Streams.js","components/GameStreams.js","index.js"],"names":["api","axios","create","headers","Client-ID","Games","_useState","useState","_useState2","Object","slicedToArray","games","setGames","useEffect","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","result","dataArray","finalArray","wrap","_context","prev","next","get","sent","data","map","game","newURL","box_art_url","replace","console","log","stop","apply","this","arguments","fetchData","react_default","createElement","className","react_router_dom","to","pathname","name","state","gameID","id","alt","src","React","Component","Test","url","match","params","toLowerCase","ReactPlayer_default","width","playing","Header","Stream","channels","setChannels","gameIDs","queryParams","finalURL","gameNames","gameNameArray","stream","game_id","concat","gameName","thumbnail_url","channel","user_name","GameStreams","location","streamData","setStreamData","_useState3","_useState4","setViewers","_ref2","totalViewers","reduce","acc","val","viewer_count","rootElement","document","getElementById","ReactDOM","render","components_Header","react_router","exact","path","component","Views"],"mappings":"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","file":"static/js/main.9b116f04.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nlet API_KEY = \"konp54pwem1n35thhka2nrn620q6xdu\";\r\nlet api = axios.create({\r\n  headers: {\r\n    \"Client-ID\": API_KEY\r\n  }\r\n});\r\n\r\nexport default api;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport api from \"../api\";\r\nfunction Games() {\r\n  const [games, setGames] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await api.get(\"https://api.twitch.tv/helix/games/top\");\r\n      //console.log(result.data);\r\n      let dataArray = result.data.data;\r\n      let finalArray = dataArray.map(game => {\r\n        let newURL = game.box_art_url\r\n          .replace(\"{width}\", \"285\")\r\n          .replace(\"{height}\", \"380\");\r\n        game.box_art_url = newURL;\r\n        return game;\r\n      });\r\n      console.log(finalArray);\r\n      setGames(finalArray);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        {games.map(game => (\r\n          <div className=\"col-lg-2 col-md-3 col-sm-4 col-6 mt-5\">\r\n            <div className=\"card\">\r\n              <Link\r\n                className=\"link\"\r\n                to={{\r\n                  pathname: \"/game/\" + game.name,\r\n                  state: {\r\n                    gameID: game.id\r\n                  }\r\n                }}\r\n              >\r\n                <img className=\"card-img-top\" alt=\"\" src={game.box_art_url} />\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Games;\r\n","import React from \"react\";\r\nconst EMBED_URL = \"https://embed.twitch.tv/embed/v1.js\";\r\n\r\nclass PLayer extends React.Component {\r\n  componentDidMount() {\r\n    let embed;\r\n    const script = document.createElement(\"script\");\r\n    script.setAttribute(\"src\", EMBED_URL);\r\n    script.addEventListener(\"load\", () => {\r\n      embed = new window.Twitch.Embed(this.props.targetID, { ...this.props });\r\n    });\r\n    document.body.appendChild(script);\r\n  }\r\n\r\n  render() {\r\n    return <div id={this.props.targetID} />;\r\n  }\r\n}\r\n\r\nexport default PLayer;\r\n","import React from \"react\";\r\nimport Player from \"./Player\";\r\nimport ReactPlayer from \"react-player\";\r\n\r\nconst Test = ({ match }) => {\r\n  const url = \"https://www.twitch.tv/\" + match.params.id.toLowerCase();\r\n  return <ReactPlayer width=\"100%\" url={url} playing />;\r\n};\r\n\r\nexport default Test;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <nav className=\"navbar fixed-top\">\r\n      <ul>\r\n        <li className=\"nav-item nav-link\">\r\n          <Link to=\"/\">Top Games</Link>\r\n        </li>\r\n        <li className=\"nav-item nav-link\">\r\n          <Link to=\"/top-streams\">Top Live Streams</Link>\r\n        </li>\r\n        <li className=\"nav-item nav-link\">\r\n          <Link to=\"/top-streams\">Favorie</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport api from \"../api\";\r\nfunction Stream() {\r\n  const [channels, setChannels] = useState([]);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await api.get(\"https://api.twitch.tv/helix/streams\");\r\n      let dataArray = result.data.data;\r\n      let gameIDs = dataArray.map(stream => {\r\n        return stream.game_id;\r\n      });\r\n\r\n      let baseURL = \"https://api.twitch.tv/helix/games?\";\r\n      let queryParams = \"\";\r\n      gameIDs.map(id => {\r\n        return (queryParams = queryParams + `id=${id}&`);\r\n      });\r\n\r\n      let finalURL = baseURL + queryParams;\r\n      let gameNames = await api.get(finalURL);\r\n      let gameNameArray = gameNames.data.data;\r\n\r\n      let finalArray = dataArray.map(stream => {\r\n        stream.gameName = \"\";\r\n        gameNameArray.map(name => {\r\n          if (stream.game_id === name.id) {\r\n            return (stream.gameName = name.name);\r\n          }\r\n        });\r\n\r\n        let newURL = stream.thumbnail_url\r\n          .replace(\"{width}\", \"320\")\r\n          .replace(\"{height}\", \"180\");\r\n        stream.thumbnail_url = newURL;\r\n        return stream;\r\n      });\r\n      setChannels(finalArray);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        {channels.map(channel => (\r\n          <div className=\"col-lg-3 col-md-4 col-sm-12 mt-5\">\r\n            <div className=\"card\">\r\n              <Link\r\n                className=\"link\"\r\n                to={{\r\n                  pathname: \"/views/\" + channel.user_name\r\n                }}\r\n              >\r\n                <img\r\n                  className=\"card-img-top\"\r\n                  alt=\"\"\r\n                  src={channel.thumbnail_url}\r\n                />\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Stream;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport api from \"../api\";\r\nfunction GameStreams({ match, location }) {\r\n  const [streamData, setStreamData] = useState([]);\r\n  const [viewers, setViewers] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await api.get(\r\n        `https://api.twitch.tv/helix/streams?game_id=${location.state.gameID}`\r\n      );\r\n      let dataArray = result.data.data;\r\n      let finalArray = dataArray.map(stream => {\r\n        let newURL = stream.thumbnail_url\r\n          .replace(\"{width}\", \"320\")\r\n          .replace(\"{height}\", \"180\");\r\n        stream.thumbnail_url = newURL;\r\n        return stream;\r\n      });\r\n\r\n      let totalViewers = finalArray.reduce((acc, val) => {\r\n        return acc + val.viewer_count;\r\n      }, 0);\r\n      setViewers(totalViewers);\r\n      setStreamData(finalArray);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        {streamData.map(stream => (\r\n          <div className=\"col-lg-3 col-md-4 col-sm-12 mt-5\">\r\n            <div className=\"card\">\r\n              <Link\r\n                className=\"link\"\r\n                to={{\r\n                  pathname: \"/views/\" + stream.user_name\r\n                }}\r\n              >\r\n                <img\r\n                  className=\"card-img-top\"\r\n                  alt=\"\"\r\n                  src={stream.thumbnail_url}\r\n                />\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameStreams;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Games from \"./components/Games\";\r\nimport Views from \"./components/Views\";\r\nimport Header from \"./components/Header\";\r\nimport Stream from \"./components/Streams\";\r\nimport GameStreams from \"./components/GameStreams\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./styles.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"shards-ui/dist/css/shards.min.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <div className=\"App container-fluid\">\r\n        <Route exact path=\"/\" component={Games} />\r\n        <Route exact path=\"/top-streams\" component={Stream} />\r\n        <Route path=\"/game/:id\" component={GameStreams} />\r\n      </div>\r\n      <Route path=\"/views/:id\" component={Views} />\r\n    </Router>\r\n  );\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}