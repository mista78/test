{"version":3,"sources":["api.js","components/Games.js","components/Home.js","components/Header.js","components/Streams.js","components/GameStreams.js","index.js"],"names":["api","axios","create","headers","Client-ID","Games","_useState","useState","_useState2","Object","slicedToArray","games","setGames","useEffect","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","result","dataArray","finalArray","wrap","_context","prev","next","get","sent","data","map","game","newURL","box_art_url","replace","stop","apply","this","arguments","fetchData","react_default","createElement","className","react_router_dom","to","pathname","name","state","gameID","id","alt","src","Home","match","channels","setChannels","_useState3","_useState4","viewers","setViewers","_useState5","params","_useState6","views","setViews","_ref2","gameIDs","queryParams","finalURL","gameNames","gameNameArray","uViews","uViewers","stream","game_id","concat","gameName","thumbnail_url","undefined","_objectSpread","console","log","user_name","value","viewer_count","user_id","handelClick","event","updateViews","target","getAttribute","url","toLowerCase","ReactPlayer_default","width","playing","channel","data-count","onClick","Header","Stream","GameStreams","location","streamData","setStreamData","rootElement","document","getElementById","ReactDOM","render","components_Header","react_router","exact","path","component"],"mappings":"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","file":"static/js/main.64ad6e8a.chunk.js","sourcesContent":["import axios from \"axios\";\n\nlet API_KEY = \"konp54pwem1n35thhka2nrn620q6xdu\";\nlet api = axios.create({\n  headers: {\n    \"Client-ID\": API_KEY\n  }\n});\n\nexport default api;","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../api\";\nfunction Games() {\n  const [games, setGames] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(\"https://api.twitch.tv/helix/games/top?first=25\");\n      let dataArray = result.data.data;\n      let finalArray = dataArray.map(game => {\n        let newURL = game.box_art_url\n          .replace(\"{width}\", \"285\")\n          .replace(\"{height}\", \"380\");\n        game.box_art_url = newURL;\n        return game;\n      });\n      // console.log(finalArray);\n      setGames(finalArray);\n    };\n    fetchData();\n  }, []);\n  return (\n    <div>\n      <div className=\"row\">\n        {games.map(game => (\n          <div className=\"col-lg-2 col-md-3 col-sm-4 col-6 mt-5\">\n            <div className=\"card\">\n              <Link\n                className=\"link\"\n                to={{\n                  pathname: \"/game/\" + game.name,\n                  state: {\n                    gameID: game.id\n                  }\n                }}\n              >\n                <img className=\"card-img-top\" alt=\"\" src={game.box_art_url} />\n              </Link>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Games;\n","import React, { useEffect, useState } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport api from \"../api\";\nfunction Home({ match }) {\n  const [channels, setChannels] = useState([]);\n  const [viewers, setViewers] = useState(0);\n  const [views, setViews] = useState({\n    \"name\" : (match.params.id) ? match.params.id : \"\"\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(\"https://api.twitch.tv/helix/streams?first=10&language=fr\");\n      let dataArray = result.data.data;\n      let gameIDs = dataArray.map(stream => {\n        return stream.game_id;\n      });\n\n      let baseURL = \"https://api.twitch.tv/helix/games?\";\n      let queryParams = \"\";\n      gameIDs.map(id => {\n        return (queryParams = queryParams + `id=${id}&`);\n      });\n\n      let finalURL = baseURL + queryParams;\n      let gameNames = await api.get(finalURL);\n      let gameNameArray = gameNames.data.data;\n      let finalArray = dataArray.map(stream => {\n        stream.gameName = \"\";\n        gameNameArray.map(name => {\n          if (stream.game_id === name.id) {\n            return (stream.gameName = name.name);\n          }\n        });\n        let newURL = stream.thumbnail_url\n          .replace(\"{width}\", \"320\")\n          .replace(\"{height}\", \"180\");\n        stream.thumbnail_url = newURL;\n        return stream;\n      });\n      setChannels(finalArray);\n      if (match.params.id === undefined) {\n        const uViews = {...views}\n        const uViewers = {...viewers}\n        console.log(finalArray)\n        uViews.name = finalArray[0].user_name\n        uViewers.value = finalArray[0].viewer_count\n        uViews.id = finalArray[0].user_id\n        setViews(uViews)\n        setViewers(uViewers)\n      }\n    };\n    fetchData();\n  }, []);\n  const handelClick = (event) => {\n    const updateViews = {...views}\n    updateViews.name = event.target.getAttribute('value')\n    setViews(updateViews)\n  }\n  const url = \"https://www.twitch.tv/\" + views.name.toLowerCase();\n  return (\n    <div>\n        <div className=\"left\">\n          <ReactPlayer width=\"100%\" url={url} playing />\n        </div>\n        <div className=\"right\">\n          <div className=\"row\">\n            {channels.map(channel => (\n              <div className=\"col-lg-12 col-md-12 col-sm-12 mt-5\">\n                <div className=\"card\">\n                  <span className=\"spanF\" data-count={channel.user_name}  onClick={handelClick}>\n                    <img\n                      value={channel.user_name}\n                      className=\"card-img-top\"\n                      alt=\"\"\n                      src={channel.thumbnail_url}\n                    />\n                  </span>\n                </div>\n              </div>\n            ))}\n          </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Header() {\n  return (\n    <nav className=\"navbar fixed-top\">\n      <ul>\n        <li className=\"nav-item nav-link\">\n          <Link to=\"/\">Home</Link>\n        </li>\n         <li className=\"nav-item nav-link\">\n          <Link to=\"/game\">Top Games</Link>\n        </li>\n        <li className=\"nav-item nav-link\">\n          <Link to=\"/top-streams\">Top Live Streams</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Header;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../api\";\nfunction Stream() {\n  const [channels, setChannels] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(\"https://api.twitch.tv/helix/streams?first=60&language=fr\");\n      let dataArray = result.data.data;\n      let gameIDs = dataArray.map(stream => {\n        return stream.game_id;\n      });\n      let baseURL = \"https://api.twitch.tv/helix/games?\";\n      let queryParams = \"\";\n      gameIDs.map(id => {\n        return (queryParams = queryParams + `id=${id}&`);\n      });\n      let finalURL = baseURL + queryParams;\n      let gameNames = await api.get(finalURL);\n      let gameNameArray = gameNames.data.data;\n      let finalArray = dataArray.map(stream => {\n        stream.gameName = \"\";\n        gameNameArray.map(name => {\n          if (stream.game_id === name.id) {\n            return (stream.gameName = name.name);\n          }\n        });\n        let newURL = stream.thumbnail_url\n          .replace(\"{width}\", \"320\")\n          .replace(\"{height}\", \"180\");\n        stream.thumbnail_url = newURL;\n        return stream;\n      });\n      setChannels(finalArray);\n    };\n    fetchData();\n  }, []);\n  return (\n    <div>\n      <div className=\"row\">\n        {channels.map(channel => (\n          <div className=\"col-lg-3 col-md-4 col-sm-12 mt-5\">\n            <div className=\"card\">\n              <Link\n                className=\"link views\"\n                data-count={channel.user_name}\n                to={{\n                  pathname: \"/views/\" + channel.user_name\n                }}\n              >\n                <img\n                  className=\"card-img-top\"\n                  alt=\"\"\n                  src={channel.thumbnail_url}\n                />\n              </Link>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Stream;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../api\";\nfunction GameStreams({ match, location }) {\n  const [streamData, setStreamData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(\n        `https://api.twitch.tv/helix/streams?game_id=${location.state.gameID}&first=24&language=fr`\n      );\n      let dataArray = result.data.data;\n      let finalArray = dataArray.map(stream => {\n        let newURL = stream.thumbnail_url\n          .replace(\"{width}\", \"320\")\n          .replace(\"{height}\", \"180\");\n        stream.thumbnail_url = newURL;\n        return stream;\n      });\n      setStreamData(finalArray);\n    };\n    fetchData();\n  }, []);\n  return (\n    <div>\n      <div className=\"row\">\n        {streamData.map(stream => (\n          <div className=\"col-lg-3 col-md-4 col-sm-12 mt-5\">\n            <div className=\"card\">\n              <Link\n                className=\"link views\"\n                data-count={stream.user_name}\n                to={{\n                  pathname: \"/views/\" + stream.user_name\n                }}\n              >\n                <img\n                  className=\"card-img-top\"\n                  alt=\"\"\n                  src={stream.thumbnail_url}\n                />\n              </Link>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default GameStreams;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Games from \"./components/Games\";\nimport Home from \"./components/Home\";\nimport Header from \"./components/Header\";\nimport Stream from \"./components/Streams\";\nimport GameStreams from \"./components/GameStreams\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <div className=\"App container-fluid\">\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/game\" component={Games} />\n        <Route path=\"/top-streams\" component={Stream} />\n        <Route path=\"/game/:id\" component={GameStreams} />\n      </div>\n      <Route path=\"/views/:id\" component={Home} />\n    </Router>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}