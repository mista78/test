{"version":3,"sources":["../node_modules/typescript/lib sync","api.js","components/Games.js","components/Home.js","components/Header.js","components/Streams.js","components/GameStreams.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","api","axios","create","headers","Client-ID","Games","_useState","useState","_useState2","Object","slicedToArray","games","setGames","useEffect","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","result","dataArray","finalArray","wrap","_context","prev","next","get","sent","data","map","game","newURL","box_art_url","replace","stop","apply","this","arguments","fetchData","react_default","createElement","className","key","react_router_dom","to","pathname","name","state","gameID","alt","src","Home","match","test","setTest","user_name","params","channels","setChannels","_useState3","_useState4","viewers","setViewers","_useState5","_useState6","player","setPlayer","_useState7","_useState8","views","setViews","_ref2","gameIDs","queryParams","finalURL","gameNames","gameNameArray","stream","game_id","concat","gameName","thumbnail_url","setData","then","time","setInterval","clearInterval","play","_ref3","_callee2","res","uPlayer","_context2","_objectSpread","uViews","uViewers","value","viewer_count","handelClick","event","updateViews","uVie","target","getAttribute","url","toLowerCase","ReactPlayer_default","width","playing","channel","data-count","onClick","user_id","vie","Header","Stream","GameStreams","location","streamData","setStreamData","console","log","rootElement","document","getElementById","ReactDOM","render","react","components_Header","react_router","exact","path","component","props","components_Home","assign"],"mappings":"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","file":"static/js/main.a7c3922d.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 253;","import axios from \"axios\";\n\nlet API_KEY = \"konp54pwem1n35thhka2nrn620q6xdu\";\nlet api = axios.create({\n  headers: {\n    \"Client-ID\": API_KEY\n  }\n});\n\nexport default api;","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../api\";\nfunction Games() {\n  const [games, setGames] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(\"https://api.twitch.tv/helix/games/top?first=25\");\n      let dataArray = result.data.data;\n      let finalArray = dataArray.map(game => {\n        let newURL = game.box_art_url\n          .replace(\"{width}\", \"285\")\n          .replace(\"{height}\", \"380\");\n        game.box_art_url = newURL;\n        return game;\n      });\n      // console.log(finalArray);\n      setGames(finalArray);\n    };\n    fetchData();\n  }, []);\n  return (\n    <div>\n      <div className=\"row\">\n        {games.map(game => (\n          <div key={game.id} className=\"col-lg-2 col-md-3 col-sm-4 col-6 mt-5\">\n            <div className=\"card\">\n              <Link\n                className=\"link\"\n                to={{\n                  pathname: \"/stream/\" + game.name,\n                  state: {\n                    gameID: game.id\n                  }\n                }}\n              >\n                <img className=\"card-img-top\" alt=\"\" src={game.box_art_url} />\n              </Link>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Games;\n","import React, { useEffect, useState } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport api from \"../api\";\nimport { isConstructorDeclaration } from \"typescript\";\nfunction Home({match, test,setTest}) {\n  const [channels, setChannels] = useState([\n    {\"user_name\" : (match.params.id) ? match.params.id : \"\" }\n  ]);\n  const [viewers, setViewers] = useState(0);\n  const [player, setPlayer] = useState({\"data\" : []});\n  const [views, setViews] = useState({\n    \"name\" : (match.params.id) ? match.params.id : \"\"\n  });\n  const fetchData = async () => {\n    const result = await api.get(\"https://api.twitch.tv/helix/streams?language=fr&limit=10 \");\n    let dataArray = result.data.data;\n    let gameIDs = dataArray.map(stream => {\n      return stream.game_id;\n    });\n\n    let baseURL = \"https://api.twitch.tv/helix/games?\";\n    let queryParams = \"\";\n    gameIDs.map(id => {\n      return (queryParams = queryParams + `id=${id}&`);\n    });\n\n    let finalURL = baseURL + queryParams;\n    let gameNames = await api.get(finalURL);\n    let gameNameArray = gameNames.data.data;\n    let finalArray = dataArray.map(stream => {\n      stream.gameName = \"\";\n      gameNameArray.map(name => {\n        if (stream.game_id === name.id) {\n          return (stream.gameName = name.name);\n        }\n      });\n      let newURL = stream.thumbnail_url\n        .replace(\"{width}\", \"320\")\n        .replace(\"{height}\", \"180\");\n      stream.thumbnail_url = newURL;\n      return stream;\n    });\n    \n    \n    setChannels(finalArray);\n  };\n  // useEffect(() => {\n  //   fetchData();\n  // }, []);\n\n  const  setData = () => {\n    // if (match.params.id === undefined) {\n      // const uViews = {...views}\n      // const uViewers = {...viewers}\n      // console.log(channels)\n    //   JSON.stringify(channels);\n    //   uViews.name = channels[0].user_name\n    //   uViewers.value = channels[0].viewer_count\n    //   uViews.id = channels[0].user_id\n    //   setViews(uViews)\n    //   setViewers(uViewers)\n    // }\n  }\n\n  useEffect(() => {\n\n    fetchData().then(setData);\n    const time = setInterval(()=>fetchData().then(setData),15000);\n    return () => clearInterval(time)\n  },[]);\n\n  const play = async () => {\n    if(views.id) {\n      const res = await api.get(\"https://api.twitch.tv/helix/streams?user_id=\" + views.id);\n      const uPlayer = {...player}\n      uPlayer.data = res.data.data[0]\n      setPlayer(uPlayer)\n    }\n  }\n\n  useEffect(() => {\n    if(views.name == \"\") {\n      const uViews = {...views}\n      uViews.name = channels[0].user_name\n      setViews(uViews)\n    }\n    const uViewers = {...player}\n    uViewers.value = (player.data.viewer_count) ? player.data.viewer_count : channels[0].viewer_count\n    setViewers(uViewers)\n    play()\n  }, [channels])\n\n  const handelClick = (event) => {\n    const updateViews = {...views}\n    const uVie = {...viewers}\n    uVie.value =  event.target.getAttribute('vie')\n    updateViews.name = event.target.getAttribute('value')\n    updateViews.id = event.target.getAttribute('id')\n    setViewers(uVie)\n    setViews(updateViews)\n  }\n  const url = \"https://www.twitch.tv/\" + views.name.toLowerCase();\n\n  return (\n    <div>\n        <div className=\"left\">\n          <span className=\"viewer\">{viewers.value}</span>\n          <ReactPlayer width=\"100%\" url={url} playing />\n        </div>\n        <div className=\"right\">\n          <div className=\"row\">\n            {channels.map(channel => (\n              <div key={channel.user_name} className=\"col-lg-12 col-md-12 col-sm-12 mt-5\">\n                <div  className=\"card\">\n                <h1></h1>\n                  <span className=\"spanF\" data-count={channel.user_name}  onClick={handelClick}>\n                    <img\n                      value={channel.user_name}\n                      id={channel.user_id}\n                      vie={channel.viewer_count}\n                      className=\"card-img-top\"\n                      alt=\"\"\n                      src={channel.thumbnail_url}\n                    />\n                  </span>\n                </div>\n              </div>\n            ))}\n          </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Header({data}) {\n  return (\n    <nav className=\"navbar fixed-top\">\n      <ul>\n        <li className=\"nav-item nav-link\">\n          <Link to=\"/\">Home</Link>\n        </li>\n         <li className=\"nav-item nav-link\">\n          <Link to=\"/game\">Top Games</Link>\n        </li>\n        <li className=\"nav-item nav-link\">\n          <Link to=\"/top-streams\">Top Live Streams</Link>\n        </li>\n        <li className=\"nav-item nav-link\">\n          <Link to=\"/top-streams\">{data}</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Header;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../api\";\nfunction Stream() {\n  const [channels, setChannels] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(\"https://api.twitch.tv/helix/streams?first=60&language=fr\");\n      let dataArray = result.data.data;\n      let gameIDs = dataArray.map(stream => {\n        return stream.game_id;\n      });\n      let baseURL = \"https://api.twitch.tv/helix/games?\";\n      let queryParams = \"\";\n      gameIDs.map(id => {\n        return (queryParams = queryParams + `id=${id}&`);\n      });\n      let finalURL = baseURL + queryParams;\n      let gameNames = await api.get(finalURL);\n      let gameNameArray = gameNames.data.data;\n      let finalArray = dataArray.map(stream => {\n        stream.gameName = \"\";\n        gameNameArray.map(name => {\n          if (stream.game_id === name.id) {\n            return (stream.gameName = name.name);\n          }\n        });\n        let newURL = stream.thumbnail_url\n          .replace(\"{width}\", \"320\")\n          .replace(\"{height}\", \"180\");\n        stream.thumbnail_url = newURL;\n        return stream;\n      });\n      setChannels(finalArray);\n    };\n    fetchData();\n  }, []);\n  return (\n    <div>\n      <div className=\"row\">\n        {channels.map(channel => (\n          <div key={channel.user_name}  className=\"col-lg-3 col-md-4 col-sm-12 mt-5\">\n            <div  className=\"card\">\n              <Link\n                \n                className=\"link views\"\n                data-count={channel.user_name}\n                to={{\n                  pathname: \"/views/\" + channel.user_name\n                }}\n              >\n                <img\n                  className=\"card-img-top\"\n                  alt=\"\"\n                  src={channel.thumbnail_url}\n                />\n              </Link>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Stream;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../api\";\nfunction GameStreams({ match, location }) {\n  const [streamData, setStreamData] = useState([]);\n  console.log(location)\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(\n        `https://api.twitch.tv/helix/streams?game_id=${location.state.gameID}&first=24&language=fr`\n      );\n      let dataArray = result.data.data;\n      let finalArray = dataArray.map(stream => {\n        let newURL = stream.thumbnail_url\n          .replace(\"{width}\", \"320\")\n          .replace(\"{height}\", \"180\");\n        stream.thumbnail_url = newURL;\n        return stream;\n      });\n      setStreamData(finalArray);\n    };\n    fetchData();\n  }, []);\n  return (\n    <div>\n      <div className=\"row\">\n        {streamData.map(stream => (\n          <div key={stream.user_name} className=\"col-lg-3 col-md-4 col-sm-12 mt-5\">\n            <div className=\"card\">\n              <Link\n              \n                className=\"link views\"\n                data-count={stream.user_name}\n                to={{\n                  pathname: \"/views/\" + stream.user_name\n                }}\n              >\n                <img\n                  className=\"card-img-top\"\n                  alt=\"\"\n                  src={stream.thumbnail_url}\n                />\n              </Link>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default GameStreams;\n","import React,{Fragment,useState} from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Games from \"./components/Games\";\nimport Home from \"./components/Home\";\nimport Header from \"./components/Header\";\nimport Stream from \"./components/Streams\";\nimport GameStreams from \"./components/GameStreams\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\";\n\nconst FadingRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={routeProps => (\n    <Fragment>\n      <Component>\n        {routeProps = {...routeProps}}\n      </Component>\n    </Fragment>\n  )} />\n)\n\nfunction App() {\n  const [streamData, setStreamData] = useState(100);\n  return (\n    <Fragment>\n      \n      <Router>\n      <Header data={streamData} />\n        <div className=\"App container-fluid\">``\n\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/game\" component={Games} />\n          <Route path=\"/top-streams\" component={Stream} />\n          <Route exact path=\"/stream/:id\" component={GameStreams} />\n        </div>\n        <Route path=\"/views/:id\" render={props => <Home {...props} test={streamData} setTest={setStreamData} />}/>\n      </Router>\n    </Fragment>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}